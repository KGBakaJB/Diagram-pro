# -*- coding: utf-8 -*-
"""
Created on Mon Nov 16 11:03:12 2020

@author: Кирилл
"""
from matplotlib import pyplot as plt
import numpy as np 
import matplotlib.ticker as mtick
from GP_ice import multylayer
from GP_ice import onelayer_h
import tkinter as tk # use tkinter for python 3
root = tk.Tk()
width = root.winfo_screenwidth()
height = root.winfo_screenheight()

#Словарь разрушающих нагрузок композитного льда, коэффициенты степенной функции
"""
dic = {'F':{20:{'ЦП':[3.134, 1.462], '1кан':[1.202*10**-31, 27.97], '2кан':[9.958*10**-12, 10.45], '3кан':[2.193*10**-20,-18.04]},
       10:{'ЦП':[1.638*10**-6, 8.508], '1кан':[5.208*10**-6, 7.626], '2кан':[3.967*10**-5, 6.473], '3кан':[0.0003909, 5.285]},
       3:{'ЦП':[5.263*10**-33, 29.35], '1кан':[1.31, 1.736], '2кан':[1.962, 1.429], '3кан':[0.8261, 1.954]}
           },
       'A1':{20:{'ЦП':[6.731*10**-48, 40.66], '1кан':[1.73*10**-35, 29.36], '2кан':[9.885*10**-20, 15.54], '3кан':[3.373*10**-20, 15.95]},
       10:{'ЦП':[5.445*10**-10, 10.17], '1кан':[2.099*10**-11, 11.37], '2кан':[7.696*10**-9, 8.155], '3кан':[4.797*10**-6, 5.034]},
       3:{'ЦП':[0.01674, 1.842], '1кан':[0.005819, 2.008], '2кан':[0.0059, 1.947], '3кан':[0.0008587, 3.119]}
           }
       }
"""

dic = {"1":{'F':{20:{'ЦП':[0.3314, 1.761], '1кан':[0.3524, 1.497], '2кан':[1.549, 0.8266], '3кан':[0.9811, 1.001]},
       10:{'ЦП':[3.912, 1.378], '1кан':[2.617, 1.199], '2кан':[3.027, 0.9463], '3кан':[4.485, 0.6963]},
       3:{'ЦП':[2.374, 1.736], '1кан':[2.052, 1.603], '2кан':[1.71, 1.61], '3кан':[0.9332, 1.922]}
           },
       'A1':{20:{'ЦП':[0.001135, 2.28], '1кан':[0.001524,1.714], '2кан':[0.006139, 1.131], '3кан':[0.006643, 1.085]},
       10:{'ЦП':[0.0218, 1.688], '1кан':[0.008373, 1.685], '2кан':[0.00832, 1.393], '3кан':[0.01913, 0.9639]},
       3:{'ЦП':[0.01458, 1.949], '1кан':[0.01079, 1.822], '2кан':[0.01157, 1.675], '3кан':[0.001156, 3.019]}
           }
       },
       "2":{'F':{
       10:{'ЦП':[3.395, 1.072], '1кан':[1.073, 1.418], '2кан':[0.1701, 2.227], '3кан':[2.808, 0.986]},
       3:{'ЦП':[0.09707, 3.38], '1кан':[0.6035, 1.963], '2кан':[0.1613, 2.587], '3кан':[]}
           },
       'A1':{
       10:{'ЦП':[0.0212, 1.347], '1кан':[0.0428, 0.8302], '2кан':[0.002732, 1.946], '3кан':[0.01489, 1.216]},
       3:{'ЦП':[0.01458, 1.949], '1кан':[0.0001051, 6.019], '2кан':[0.01157, 1.675], '3кан':[]}
           }
       },
       "3":{'F':{
       3:{'ЦП':[34.87, 0.5321], '1кан':[0.6495, 1.923], '2кан':[0.9545, 1.713], '3кан':[9.564, 0.752]}
           },
       'A1':{
       3:{'ЦП':[0.01046, 1.074], '1кан':[0.0982 * 10** -5, 3.605], '2кан':[0.001852, 2.313], '3кан':[0.0002064, 3.314]}
           }
       }
       }

"""
СЛОВАРИК С НОВОЙ ОБРАБОТКОЙ 20 ММ
"""
dic = {"1":{'F':{20:{'ЦП':[1.059, 1.1975], '1кан':[0.5975, 1.2964], '2кан':[0.9775, 1.0146], '3кан':[1.1818, 0.8848]},
       10:{'ЦП':[3.912, 1.378], '1кан':[2.617, 1.199], '2кан':[3.027, 0.9463], '3кан':[4.485, 0.6963]},
       3:{'ЦП':[2.374, 1.736], '1кан':[2.052, 1.603], '2кан':[1.71, 1.61], '3кан':[0.9332, 1.922]}
           },
       'A1':{20:{'ЦП':[0.0036, 1.3616], '1кан':[0.003,1.3695], '2кан':[0.004, 1.2511], '3кан':[0.0033, 1.3312]},
       10:{'ЦП':[0.0218, 1.688], '1кан':[0.008373, 1.685], '2кан':[0.00832, 1.393], '3кан':[0.01913, 0.9639]},
       3:{'ЦП':[0.01458, 1.949], '1кан':[0.01079, 1.822], '2кан':[0.01157, 1.675], '3кан':[0.001156, 3.019]}
           }
       },
       "2":{'F':{
       10:{'ЦП':[3.395, 1.072], '1кан':[1.073, 1.418], '2кан':[0.1701, 2.227], '3кан':[2.808, 0.986]},
       3:{'ЦП':[0.09707, 3.38], '1кан':[0.6035, 1.963], '2кан':[0.1613, 2.587], '3кан':[]}
           },
       'A1':{
       10:{'ЦП':[0.0212, 1.347], '1кан':[0.0428, 0.8302], '2кан':[0.002732, 1.946], '3кан':[0.01489, 1.216]},
       3:{'ЦП':[0.01458, 1.949], '1кан':[0.0001051, 6.019], '2кан':[0.01157, 1.675], '3кан':[]}
           }
       },
       "3":{'F':{
       3:{'ЦП':[34.87, 0.5321], '1кан':[0.6495, 1.923], '2кан':[0.9545, 1.713], '3кан':[9.564, 0.752]}
           },
       'A1':{
       3:{'ЦП':[0.01046, 1.074], '1кан':[0.0982 * 10** -5, 3.605], '2кан':[0.001852, 2.313], '3кан':[0.0002064, 3.314]}
           }
       }
       }

dic = {
       20:{"1":{'pr':{"Fmax":['$F_{max}$' , 1.021, 1.201],
           "A1":['$A_{cr}$', 0.0028, 1.812],
           'A2':['$A_{supcr}$',0.007, 0.463 ],
           'Asum':['$A_{tot}$',0.0055, 1.57],
           'Wcr':['$W_{cr}$' ,3.841, 0.576],
           'w_max':['$W_{max}$' ,7.476, 0.374],
           'ka1':['$K_{cr}$',0.77],
           'ksum':['$K_{tot}$',0.71],
           'ka2':['$K_{supcr}$',0],
           'A1_A':['$A_{cr}$/$A_{tot}$',0],
           'wsup':['$W_{supcr}$' ,0],
           'D':['D',0.038, 4.43],
           'E':['E',19.82*10**4, 4.333],
           'r':['r',0.055, 0.956]
                   },
              
              
              '1':{"Fmax":['$F_{max}$' , 1.015, 0.993],
           "A1":['$A_{cr}$', 0.0032, 1.341],
           'A2':['$A_{supcr}$',0.0002, 2.01],
           'Asum':['$A_{tot}$',0.0031, 1.489],
           'Wcr':['$W_{cr}$' ,5.562, 0.232],
           'w_max':['$W_{max}$' ,5.804, 0.309],
           'ka1':['$K_{cr}$',0.72],
           'ksum':['$K_{tot}$',0.7],
           'ka2':['$K_{supcr}$',0],
           'A1_A':['$A_{cr}$/$A_{tot}$',0],
           'wsup':['$W_{supcr}$' ,0]
                  },
              '2':{"Fmax":['$F_{max}$' , 0.936, 0.99],
           "A1":['$A_{cr}$', 0.0029, 1.337],
           'A2':['$A_{supcr}$',0.0002, 2.01],
           'Asum':['$A_{tot}$',0.0039, 1.37],
           'Wcr':['$W_{cr}$' ,5.08, 0.256],
           'w_max':['$W_{max}$' ,7.627, 0.269],
           'ka1':['$K_{cr}$',0.75],
           'ksum':['$K_{tot}$',0.68],
           'ka2':['$K_{supcr}$',0],
           'A1_A':['$A_{cr}$/$A_{tot}$',0],
           'wsup':['$W_{supcr}$' ,0]
                  },
              '3':{"Fmax":['$F_{max}$' , 1.141, 0.87],
           "A1":['$A_{cr}$', 0.0026, 1.382],
           'A2':['$A_{supcr}$',0.0002, 2.01],
           'Asum':['$A_{tot}$',0.002, 1.72],
           'Wcr':['$W_{cr}$' ,5.838, 0.228],
           'w_max':['$W_{max}$' ,4.157, 0.618],
           'ka1':['$K_{cr}$',0.7],
           'ksum':['$K_{tot}$',0.66],
           'ka2':['$K_{supcr}$',0],
           'A1_A':['$A_{cr}$/$A_{tot}$',0],
           'wsup':['$W_{supcr}$' ,0]
                  }
              }
           },
       
       
       10:{"1":{'pr':{"Fmax":['$F_{max}$' , 2.448, 1.593],
           'Wcr':['$W_{cr}$' ,7.834 , 0.344],
           'w_max':['$W_{max}$' ,10.43, 0.404],
           "A1":['$A_{cr}$' , 0.011, 1.993],
           'A2':['$A_{supcr}$',0.0013, 2.534 ],
           'Asum':['$A_{tot}$',0.012 , 2.137],
           'ka1':['$K_{cr}$',0.63],
           'ka2':['$K_{supcr}$',0],
           'ksum':['$K_{tot}$',0.6],
           'A1_A':['$A_{cr}$/$A_{tot}$',0],
           'wsup':['$W_{supcr}$' ,0],
           'E':['E',2*10**8, 2.106],
           'D':['D',2.52, 2.793],
           'r':['r',0.132, 0.691]
                   },
              
              
           '1':{"Fmax":['$F_{max}$' , 2.552, 1.261],
           "A1":['$A_{cr}$', 0.0097, 1.623],
           'A2':['$A_{supcr}$',0.0018, 2.15 ],
           'Asum':['$A_{tot}$',0.015 , 1.551],
           'Wcr':['$W_{cr}$' ,6.651, 0.271],
           'w_max':['$W_{max}$' ,8.992, 0.387],
           'ka1':['$K_{cr}$',0.65],
           'ksum':['$K_{tot}$',0.61],
           'ka2':['$K_{supcr}$',0],
           'A1_A':['$A_{cr}$/$A_{tot}$',0],
           'wsup':['$W_{supcr}$' ,0]
                  },
              '2':{"Fmax":['$F_{max}$' , 1.756, 1.375],
           "A1":['$A_{cr}$', 0.0061, 1.671],
           'A2':['$A_{supcr}$',0.0019, 2.389 ],
           'Asum':['$A_{tot}$',0.0075 , 2.001],
           'Wcr':['$W_{cr}$' ,6.6571, 0.199],
           'w_max':['$W_{max}$' ,7.824, 0.592],
           'ka1':['$K_{cr}$',0.62],
           'ksum':['$K_{tot}$',0.59],
           'ka2':['$K_{supcr}$',0],
           'A1_A':['$A_{cr}$/$A_{tot}$',0],
           'wsup':['$W_{supcr}$' ,0]
                  },
              '3':{"Fmax":['$F_{max}$' , 3.208, 0.957],
           "A1":['$A_{cr}$', 0.012, 1.308],
           'A2':['$A_{supcr}$',0.002, 2.196 ],
           'Asum':['$A_{tot}$',0.013, 1.613],
           'Wcr':['$W_{cr}$' ,6.485, 0.27],
           'w_max':['$W_{max}$' ,6.441, 0.669],
           'ka1':['$K_{cr}$',0.65],
           'ksum':['$K_{tot}$',0.62],
           'ka2':['$K_{supcr}$',0],
           'A1_A':['$A_{cr}$/$A_{tot}$',0],
           'wsup':['$W_{supcr}$' ,0]
                  }
               },
           "2":{'pr':{
           "Fmax":['$F_{max}$' , 1.713, 1.305],
           "A1":['$A_{cr}$', 0.0056, 1.796],
           'A2':['$A_{supcr}$',0.001, 2.289 ],
           'Asum':['$A_{tot}$',0.0044, 2.123],
           'Wcr':['$W_{cr}$' ,9.657, 0.2],
           'w_max':['$W_{max}$' ,4.33, 0.729],
           'ka1':['$K_{cr}$',0.78],
           'ksum':['$K_{tot}$',0.73],
           'ka2':['$K_{supcr}$',0],
           'A1_A':['$A_{cr}$/$A_{tot}$',0],
           'wsup':['$W_{supcr}$' ,0],
           'D':['D',1.811, 2.747],
           'E':['E',4*10**7, 1.935],
           'r':['r',0.14, 0.612]
                   },
               
               
           '1':{"Fmax":['$F_{max}$' , 1.797, 1.178],
           "A1":['$A_{cr}$', 0.003, 1.814],
           'A2':['$A_{supcr}$',0.0011, 2.032],
           'Asum':['$A_{tot}$',0.0035, 1.976],
           'Wcr':['$W_{cr}$' ,1.827, 0.692],
           'w_max':['$W_{max}$' ,5.553, 0.472],
           'ka1':['$K_{cr}$',0.79],
           'ksum':['$K_{tot}$',0.77],
           'ka2':['$K_{supcr}$',0],
           'A1_A':['$A_{cr}$/$A_{tot}$',0],
           'wsup':['$W_{supcr}$' ,0]
                  },
              '2':{"Fmax":['$F_{max}$' , 4.627, 0.737],
           "A1":['$A_{cr}$', 0.0042, 1.689],
           'A2':['$A_{supcr}$',0.0003, 2.686],
           'Asum':['$A_{tot}$',0.0027, 2.149],
           'Wcr':['$W_{cr}$' ,1.611, 0.803],
           'w_max':['$W_{max}$' ,1.136, 1.237],
           'ka1':['$K_{cr}$',0.8],
           'ksum':['$K_{tot}$',0.76],
           'ka2':['$K_{supcr}$',0],
           'A1_A':['$A_{cr}$/$A_{tot}$',0],
           'wsup':['$W_{supcr}$' ,0]
                  },
              '3':{"Fmax":['$F_{max}$' , 6.128, 0.636],
           "A1":['$A_{cr}$', 0.0076, 1.497],
           'A2':['$A_{supcr}$',0.0031, 1.704],
           'Asum':['$A_{tot}$',0.0103, 1.601],
           'Wcr':['$W_{cr}$' ,2.4, 0.673],
           'w_max':['$W_{max}$' ,3.928, 0.712],
           'ka1':['$K_{cr}$',0.79],
           'ksum':['$K_{tot}$',0.75],
           'ka2':['$K_{supcr}$',0],
           'A1_A':['$A_{cr}$/$A_{tot}$',0],
           'wsup':['$W_{supcr}$' ,0]
                  }
               }
           },
       
       
       3:{"1":{'pr':{"Fmax":['$F_{max}$' , 3.08, 1.466],
           "A1":['$A_{cr}$', 0.0187, 1.67],
           'A2':['$A_{supcr}$',0.036, 1.104],
           'Asum':['$A_{tot}$',0.0533, 1.403],
           'Wcr':['$W_{cr}$' ,9.246, 0.277],
           'w_max':['$W_{max}$' ,27.817, -0.046],
           'ka1':['$K_{cr}$',0.6],
           'ksum':['$K_{tot}$',0.61],
           'ka2':['$K_{supcr}$',0],
           'A1_A':['$A_{cr}$/$A_{tot}$',0],
           'wsup':['$W_{supcr}$' ,0],
           'D':['D',7.387, 1.972],
           'E':['E',4*10**10, -0.696],
           'r':['r',0.166, 0.493]
                   },
              '1':{"Fmax":['$F_{max}$' , 1.657, 1.838],
           "A1":['$A_{cr}$', 0.0097, 1.945],
           'A2':['$A_{supcr}$',0.0099, 2.134],
           'Asum':['$A_{tot}$',0.02, 2.049],
           'Wcr':['$W_{cr}$' ,8.503, 0.164],
           'w_max':['$W_{max}$' ,20.56, 0.17],
           'ka1':['$K_{cr}$',0.63],
           'ksum':['$K_{tot}$',0.595],
           'ka2':['$K_{supcr}$',0],
           'A1_A':['$A_{cr}$/$A_{tot}$',0],
           'wsup':['$W_{supcr}$' ,0]
                  },
              '2':{"Fmax":['$F_{max}$' , 1.713, 1.687],
           "A1":['$A_{cr}$', 0.0072, 2.029],
           'A2':['$A_{supcr}$',0.014, 1.683],
           'Asum':['$A_{tot}$',0.022, 1.837],
           'Wcr':['$W_{cr}$' ,6.637, 0.311],
           'w_max':['$W_{max}$' ,22.663, 0.023],
           'ka1':['$K_{cr}$',0.66],
           'ksum':['$K_{tot}$',0.64],
           'ka2':['$K_{supcr}$',0],
           'A1_A':['$A_{cr}$/$A_{tot}$',0],
           'wsup':['$W_{supcr}$' ,0]
                  },
              '3':{"Fmax":['$F_{max}$' , 2.817, 1.431],
           "A1":['$A_{cr}$', 0.0135, 1.855],
           'A2':['$A_{supcr}$',0.0352, 0.902],
           'Asum':['$A_{tot}$',0.037, 1.537],
           'Wcr':['$W_{cr}$' ,14.11, -0.345],
           'w_max':['$W_{max}$' ,67.22, -0.974],
           'ka1':['$K_{cr}$',0.65],
           'ksum':['$K_{tot}$',0.59],
           'ka2':['$K_{supcr}$',0],
           'A1_A':['$A_{cr}$/$A_{tot}$',0],
           'wsup':['$W_{supcr}$' ,0]
                  }
              },
          "2":{'pr':{"Fmax":['$F_{max}$' , 1.289, 2.219],
           "A1":['$A_{cr}$', 0.003, 2.969],
           'A2':['$A_{supcr}$',0.0033, 3.094],
           'Asum':['$A_{tot}$',0.02, 2.461],
           'Wcr':['$W_{cr}$' ,4.297, 0.646],
           'w_max':['$W_{max}$' ,36.01, 0.037],
           'ka1':['$K_{cr}$',0.67],
           'ksum':['$K_{tot}$',0.63],
           'ka2':['$K_{supcr}$',0],
           'A1_A':['$A_{cr}$/$A_{tot}$',0],
           'wsup':['$W_{supcr}$' ,0],
           'D':['D',0.0002, 7.868],
           'E':['E',2*10**6, 4.985],
           'r':['r',0.012, 1.967]
                   },
              '1':{"Fmax":['$F_{max}$' , 0.496, 2.247],
           "A1":['$A_{cr}$', 0.0006, 3.123],
           'A2':['$A_{supcr}$',0.0021, 2.847],
           'Asum':['$A_{tot}$',0.0021, 3.077],
           'Wcr':['$W_{cr}$' ,1.302, 0.967],
           'w_max':['$W_{max}$' ,4.888, 0.912],
           'ka1':['$K_{cr}$',0.705],
           'ksum':['$K_{tot}$',0.71],
           'ka2':['$K_{supcr}$',0],
           'A1_A':['$A_{cr}$/$A_{tot}$',0],
           'wsup':['$W_{supcr}$' ,0]
                  },
              '2':{"Fmax":['$F_{max}$' , 0.227, 2.537],
           "A1":['$A_{cr}$', 0.0021, 2.486],
           'A2':['$A_{supcr}$',0.0008, 3.229],
           'Asum':['$A_{tot}$',0.0023, 2.957],
           'Wcr':['$W_{cr}$' ,10.383, 0.054],
           'w_max':['$W_{max}$' ,22.54, 0.204],
           'ka1':['$K_{cr}$',0.7],
           'ksum':['$K_{tot}$',0.68],
           'ka2':['$K_{supcr}$',0],
           'A1_A':['$A_{cr}$/$A_{tot}$',0],
           'wsup':['$W_{supcr}$' ,0]
                  },
              '3':{"Fmax":['$F_{max}$' , 1.062, 1.749],
           "A1":['$A_{cr}$', 0.0004, 3.328],
           'A2':['$A_{supcr}$',0.029, 1.231],
           'Asum':['$A_{tot}$',0.0075, 2.273],
           'Wcr':['$W_{cr}$' ,1.085, 1.259],
           'w_max':['$W_{max}$' , 8.973, 0.564],
           'ka1':['$K_{cr}$',0.74],
           'ksum':['$K_{tot}$',0.72],
           'ka2':['$K_{supcr}$',0],
           'A1_A':['$A_{cr}$/$A_{tot}$',0],
           'wsup':['$W_{supcr}$' ,0]
                  }
              },
          "3":{'pr':{"Fmax":['$F_{max}$' , 8.938, 1.086],
           "A1":['$A_{cr}$', 0.0098, 2.114],
           'A2':['$A_{supcr}$',0.0185, 1.875],
           'Asum':['$A_{tot}$',0.028, 1.979],
           'Wcr':['$W_{cr}$' ,5.663, 0.478],
           'w_max':['$W_{max}$' ,14.782, 0.373],
           'ka1':['$K_{cr}$',0.71],
           'ksum':['$K_{tot}$',0.72],
           'ka2':['$K_{supcr}$',0],
           'A1_A':['$A_{cr}$/$A_{tot}$',0],
           'wsup':['$W_{supcr}$' ,0],
           'D':['D',0.156, 3.947],
           'E':['E',9*10**9, 0.052],
           'r':['r',0.109, 0.729]
                   },
              '1':{"Fmax":['$F_{max}$' , 0.127, 2.675],
           "A1":['$A_{cr}$', 0.0003, 3.292],
           'A2':['$A_{supcr}$',0.003, 2.43],
           'Asum':['$A_{tot}$',0.0022, 2.789],
           'Wcr':['$W_{cr}$' ,5.771, 0.349],
           'w_max':['$W_{max}$' ,135.48, -0.622],
           'ka1':['$K_{cr}$',0.74],
           'ksum':['$K_{tot}$',0.75],
           'ka2':['$K_{supcr}$',0],
           'A1_A':['$A_{cr}$/$A_{tot}$',0],
           'wsup':['$W_{supcr}$' ,0]
                  },
              '2':{"Fmax":['$F_{max}$' , 0.0235, 3.347],
           "A1":['$A_{cr}$', 0.0003, 3.213],
           'A2':['$A_{supcr}$',0.0005, 3.156],
           'Asum':['$A_{tot}$',0.0007, 3.229],
           'Wcr':['$W_{cr}$' ,9.007, 0.156],
           'w_max':['$W_{max}$' ,66.61, -0.334],
           'ka1':['$K_{cr}$',0.7],
           'ksum':['$K_{tot}$',0.735],
           'ka2':['$K_{supcr}$',0],
           'A1_A':['$A_{cr}$/$A_{tot}$',0],
           'wsup':['$W_{supcr}$' ,0]
                  },
              '3':{"Fmax":['$F_{max}$' , 0.0069, 3.845],
           "A1":['$A_{cr}$', 4*10**-6, 5.002],
           'A2':['$A_{supcr}$',5*10**-5, 4.017],
           'Asum':['$A_{tot}$',4*10**-5, 4.426],
           'Wcr':['$W_{cr}$' ,1.645, 0.895],
           'w_max':['$W_{max}$' , 38.51, -0.125],
           'ka1':['$K_{cr}$',0.73],
           'ksum':['$K_{tot}$',0.775],
           'ka2':['$K_{supcr}$',0],
           'A1_A':['$A_{cr}$/$A_{tot}$',0],
           'wsup':['$W_{supcr}$' ,0]
                  }
              },
          "4":{'pr':{"Fmax":['$F_{max}$' , 8.919, 0.953],
           "A1":['$A_{cr}$', 0.022, 1.63],
           'A2':['$A_{supcr}$',0.011, 1.942],
           'Asum':['$A_{tot}$',0.0267, 1.845],
           'Wcr':['$W_{cr}$' ,5.835, 0.444],
           'w_max':['$W_{max}$' ,3.275, 0.946],
           'ka1':['$K_{cr}$',0.78],
           'ksum':['$K_{tot}$',0.82],
           'ka2':['$K_{supcr}$',0],
           'A1_A':['$A_{cr}$/$A_{tot}$',0],
           'wsup':['$W_{supcr}$' ,0],
           'D':['D',268.7, 0.679],
           'E':['E',2*10**12, -2.188],
           'r':['r',0.407, 0.17]
                   },
              '1':{"Fmax":['$F_{max}$' , 3.897, 1.071],
           "A1":['$A_{cr}$', 0.0004, 2.87],
           'A2':['$A_{supcr}$',0.0007, 2.814],
           'Asum':['$A_{tot}$',0.0012, 2.827],
           'Wcr':['$W_{cr}$' ,0.872, 1.094],
           'w_max':['$W_{max}$' ,2.433, 1.016],
           'ka1':['$K_{cr}$',0.79],
           'ksum':['$K_{tot}$',0.84],
           'ka2':['$K_{supcr}$',0],
           'A1_A':['$A_{cr}$/$A_{tot}$',0],
           'wsup':['$W_{supcr}$' ,0]
                  },
              '2':{"Fmax":['$F_{max}$' , 2.484, 1.213],
           "A1":['$A_{cr}$', 0.107, 0.717],
           'A2':['$A_{supcr}$',0.0002, 3.248],
           'Asum':['$A_{tot}$',0.0054, 2.204],
           'Wcr':['$W_{cr}$' ,189.1, -0.983],
           'w_max':['$W_{max}$' ,5.87, 0.681],
           'ka1':['$K_{cr}$',0.815],
           'ksum':['$K_{tot}$',0.835],
           'ka2':['$K_{supcr}$',0],
           'A1_A':['$A_{cr}$/$A_{tot}$',0],
           'wsup':['$W_{supcr}$' ,0]
                  },
              '3':{"Fmax":['$F_{max}$' , 0.0017, 4.069],
           "A1":['$A_{cr}$', 4*10**-7, 5.502],
           'A2':['$A_{supcr}$',3*10**-5, 4.07],
           'Asum':['$A_{tot}$',2*10**-5, 4.494],
           'Wcr':['$W_{cr}$' ,1.015, 1.004],
           'w_max':['$W_{max}$' , 22.48, 0.194],
           'ka1':['$K_{cr}$',0.76],
           'ksum':['$K_{tot}$',0.78],
           'ka2':['$K_{supcr}$',0],
           'A1_A':['$A_{cr}$/$A_{tot}$',0],
           'wsup':['$W_{supcr}$' ,0]
                  }
              }
         
           }
    
    }

#Словарь разрушающих нагрузок натурного льда, коэффициенты степенной функции
dic_Nat = {"A1":{'pr':[10**5*7.417, 2.5], '1':[10**5*5.922, 2.902], '2':[10**5*3.377, 2.807], '3':[10**5*5.289, 2.882]},
           "Fmax":{'pr':[10**7*0.279, 2], '1':[10**6*2, 2.208], '2':[10**6*2, 2.2485], '3':[10**5*4.691, 1.166], 'all':[10**6*2, 2.236]},
           'Asum':{'pr':[10**5*9.169, 2.5], '1':[10**5*4.057, 2.489], '2':[10**5*1.191, 1.742], '3':[5.816, -5.087], 'all':[10**4*3.636,2.398]}
           }

def F_array(X, k, p): 
   
    return k*X**p

labels_gran = [20, 20, 10 ,3]
labels_val = ['Fmax', 'Asum']
labels_type = ['pr', '1', '2', '3','all']
legend_labels = {'pr':'ЦП', '1':'1 кан', '2':'2 кан', '3':'3 кан','all': 'все кан'}

dic_len = {20:{'1':12},
           10:{'1':9, "2":16},
           3:{'1':7,'2':10,'3':13,'4':16}
           }
dic_left = {20:{'1':2.5},
10:{'1':2, "2":6},
3:{'1':1,'2':5,'3':7,'4':10}
                      }
for gran in labels_gran: 
    
    if gran == 20:
        labels_layer = '1'

    elif gran == 10:
        labels_layer = ['1','2']
    elif gran == 3:
        labels_layer = ['1','2','3','4'] 
    


    for layer in labels_layer: # СЛОИ
        h_len = dic_len[gran][layer]
        if layer == '1':
            h = np.arange(start=0.01, stop=h_len, step=0.01) #Задаю массив толщин проморозки льда
        else:
            h = np.arange(start=dic_left[gran][layer], stop=h_len, step=0.1) #Задаю массив толщин проморозки льда
        
        
        h_model =[]
        h_new = []
        for o in h:

            h_i = multylayer(o, gran, int(layer)) # переход от толщины проморозки к приведенной толщине


            if h_i != None:
                h_new.append(o)
                h_model.append(h_i) # Массив приведенных толщин

        h_model = np.array(h_model)
        h = np.array(h_new)
        fig = plt.figure(figsize=(8.3, 6.3))
        ax2 = fig.add_subplot(2, 1, 1)
        plt.grid()
        ax3 = fig.add_subplot(2, 1, 2)
        plt.grid()
        
        for Type in labels_type:  # ВИД ОПЫТОВ
            plt.rcParams.update({'font.size': 12})   
            for val in labels_val: # РАБОТА ИЛИ СИЛА
                if val =='Asum':
                    q = 4
                else:
                    q = 3
                
                if Type == 'all':
                    Type_nat = 'all'
                    Type_mod = '3'
                    
                else:
                    Type_nat = Type
                    Type_mod = Type
                Fm = F_array(h, dic[gran][layer][Type_mod][val][1], dic[gran][layer][Type_mod][val][-1] ) # F модельная
                # print('Fm= ' ,Fm)
                km = Fm/(pow(h_model, dic_Nat[val][Type_mod][1])) # коэффицент Fм
                # print('km = ', km)
                # Lam = (dic_Nat[u][k][0]/km) ** (1/(m-dic_Nat[u][k][1]))#коэффициент геометрического подобия
                
                
                Lam = pow(((dic_Nat[val][Type_nat][0]* pow(h_model*pow(10,-3), dic_Nat[val][Type_nat][1]))/(dic[gran][layer][Type_mod][val][1] * pow(h,dic[gran][layer][Type_mod][val][2]))),(1/(q-dic_Nat[val][Type_nat][1])))
                
                
                Hn = h_model*Lam/1000 #толщина натурного льда в пересчете с модельного
                
                
                
                
                
                ax2.plot(h, Lam, label = dic[gran][layer][Type_mod][val][0] + ' ' + legend_labels[Type_nat])
                ax3.plot(h, Hn, label = dic[gran][layer][Type_mod][val][0] + ' ' + legend_labels[Type_nat])
                # ax2.plot(h, Lam, label = key_nat + ' ' + str(Gran) + "мм " + Type, linewidth = line_width, c = "black", linestyle = line_style)
                # ax3.plot(h, Hn, label = key_nat + ' ' + str(Gran) + "мм " + Type, linewidth = line_width, c = "black", linestyle = line_style)
                # ax2.plot([left, left],[0, 200], c = 'black', linewidth = 3)
                # ax3.plot([left, left],[0, 2000], c = 'black', linewidth = 3)
                
                
                #Названия осей:
                # ax2.set_xlabel('$h_{fr}$, мм')
                ax2.set_ylabel('λ')
                ax3.set_xlabel('$h_{fr}$, мм')
                ax3.set_ylabel('$h_{н}$, м')
                
                #Формат чисел осей
                plt.gca().yaxis.set_major_formatter(mtick.FormatStrFormatter('$%.3g$'))
                plt.gca().xaxis.set_major_formatter(mtick.FormatStrFormatter('$%.3g$'))
                
                if layer == '1' :
                    ax2.set_xlim(0, h_len)
                    ax3.set_xlim(0, h_len)
                    if gran == 20:
                        ax2.set_ylim(0, 120)#Лямбда
                        ax3.set_ylim(0, 1.200)#толщина льдa
                   
                    else:
                        ax2.set_ylim(0, 40)#Лямбда
                        ax3.set_ylim(0, 0.4)#толщина льдa
                        
                        
                    
                else:
                    ax2.set_xlim(dic_left[gran][layer], h_len)
                    ax3.set_xlim(dic_left[gran][layer], h_len)
                    if gran == 10:
                        ax2.set_ylim(0, 40)#Лямбда
                        ax3.set_ylim(0, 0.4)#толщина льдa
                    else:
                        ax2.set_ylim(0, 20)#Лямбда
                        ax3.set_ylim(0, 0.2)#толщина льдa
                        
                        
                
                
                ax2.xaxis.set_major_locator(mtick.MultipleLocator(1))
                ax3.xaxis.set_major_locator(mtick.MultipleLocator(1))
                ax2.xaxis.set_minor_locator(mtick.MultipleLocator(0.5))
                ax3.xaxis.set_minor_locator(mtick.MultipleLocator(0.5))
           
        legend = ax2.legend(loc = 'upper center',
            mode = 'expand',
            borderaxespad = 35,
            bbox_to_anchor=(0., 2.65, 1., 1.302),
            ncol = 5
            )
        frame = legend.get_frame()
        frame.set_color('white')
        
        
        plt.savefig(str(gran)+ ' '+ layer ,dpi = 300)


# #Цвета графиков:
# color1 = plt.cm.viridis(0)
# color2 = plt.cm.viridis(0.5)
# color3 = plt.cm.viridis(.9)



# ax2.xaxis.set_major_locator(mtick.MultipleLocator(1))
# ax3.xaxis.set_major_locator(mtick.MultipleLocator(1))
# ax3.tick_params(labelsize = 18)# размер текста толщина льда
# ax2.tick_params(labelsize = 18)# размер текста лямбда


# ax2.yaxis.set_major_locator(mtick.MultipleLocator(10))# цена деления лямбда
# ax3.yaxis.set_major_locator(mtick.MultipleLocator(100))# цена деления толщины льда
#Пределы осей:


# #Названия осей:
# ax3.set_xlabel('Толщина проморозки $h_{пром}$, мм', size = 20)
# ax3.set_ylabel('Толщина натурного льда, мм', size = 20)

# #Формат чисел осей
# plt.gca().yaxis.set_major_formatter(mtick.FormatStrFormatter('$%.4g$'))
# plt.gca().xaxis.set_major_formatter(mtick.FormatStrFormatter('$%.3g$'))

l_w = 1.8
l_s = 0
lines = ['dashed', 'dashdot','solid', 'solid']


    

# ax3.legend(loc = 'lower center',
#             mode = 'expand',
#             borderaxespad = 18,
#             prop={'size':16},
#             bbox_to_anchor=(-1.9,-0.82,3.4,2),
#             ncol = 22
#             )
#np.savetxt(key_nat + ' ' + str(Gran) + "мм " + Type  +'.txt', np.column_stack((h, Lam, Hn)))
#figManager = plt.get_current_fig_manager()
#figManager.window.showMaximized()
#fig.savefig(key_nat + ' ' + str(Gran) + "мм " + Type +'.png', dpi = 300)

# figManager = plt.get_current_fig_manager()
# figManager.window.showMaximized()
plt.show()